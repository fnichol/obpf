#!/usr/bin/perl -w
use strict;
use warnings;

##
# obpf - 
#
# Author: Fletcher Nichol
# $Id$
##

my $Version = "1.0.0";

use Getopt::Long;
use Pod::Usage;
use File::Basename;

# command line options
my %Cmd_args = ();

# configuration file parsed options
my %Conf_opts = ();

# final options hash
my %Options = ();

# default values for each option
my %Defaults = (
	"ftp" => "/usr/bin/ftp",
	"patchurl" => "/"
	);

# order of and possible locations for options config files
my @CONF_LOCATIONS = ( dirname($0)."/obpf.conf", $ENV{HOME}."/.obpf", 
	"/etc/obpf.conf", "obpf.conf" );

# prefix of option environment variables
my $ENV_PREFIX = "OBPF_";


MAIN: {
	&parse_opts();
}


sub parse_opts {
	GetOptions(  \%Cmd_args, 
		"help|?", "man", "version", "verbose|v", 
		"patchurl:s", "ftp:s" ) or pod2usage(2);

	# prints usage if --help option is specified
	pod2usage( 1 )  if ( exists $Cmd_args{help} );

	# prints a manpage if --man option is specified
	pod2usage( -verbose => 2 )  if ( exists $Cmd_args{man} );

	# if there are no files given, then exit
	pod2usage("$0: no files given." )  if ( ( @ARGV == 0 ) && ( -t STDIN) );

	# parse any and all configuration files
	foreach my $conf_file ( @CONF_LOCATIONS ) {
		open( CONF, "<$conf_file" ) || next;

		while (<CONF>) {
			chomp;
			s/^#.*$//; s/\s+#.*$//; s/^\s*//; s/\s*$//;
			next if /^$/;
			if ( /(\w+)\s*=\s*(.+)/ ) {
			}
		}
	}

	# Load in option values
	foreach my $option (keys %Defaults) {
		my $env = uc( "$ENV_PREFIX$option" );

		if ( exists $ENV{$env} ) {
			# Look for environment variable options (e.g. OBPF_OPTION)
			$Options{$option} = $ENV{$env};
		}
		elsif ( exists $Cmd_args{$option} ) {
			# Look for command line options (e.g --OPTION=something)
			$Options{$option} = $Cmd_args{$option};
		}
		elsif ( exists $Conf_opts{$option} ) {
			# Look for configuration file options (e.g. OPTION=something)
			$Options{$option} = $Conf_opts{$option};
		}
		else {
			# Otherwise use the builtin default
			$Options{$option} = $Defaults{$option};
		}

		print ">>$option=$Options{$option}\n";
	}
}


__END__


=head1 NAME

obpf - 

=head1 SYNOPSIS

B<obpf> [B<-v>] [B<--version>] [B<--ftp>=I<FILE>] [B<--patchurl>=I<URL>] I<profile>

=head1 DESCRIPTION

B<obpf> .

=head1 OPTIONS

=over 4

=item B<--ftp>=I<FILE>

path to the ftp command.

=item B<--patchurl>=I<URL>

tries to download the patches from this I<URL> or from a list of I<URL>s
seperated by spaces. Any I<URL> of starting with /, ftp://, http:// or https://
can be used.

=item B<--verbose>, B<-v>

shows more verbose output.

=item B<--version>

displays the version of the program

=back

=head1 EXAMPLES

.

=head1 ENVIRONMENT VARIABLES

=over 4

=item B<OBPF_FTP>

see B<--ftp> option.

=item B<OBPF_PATCHURL>

see B<--patchurl> option.

=back

=head1 AUTHOR

Fletcher Nichol
